1.HTML (Lenguaje de marcas)
    -Hyper text markup languaje
    <p>This is some text</p>
    <a href="google.com">This is a link to Google!</a>
2.CSS (Cascading Style Sheet)
    -change color, font size, font, layout
    -responsive
    -global + consistent
    p{
        color: red;
    }
3.Git
    -versioning
    -collaborate
4.NPM
    -makes code accessible to the internet
5.JavaScript
    -programming language (scripting languaje)
6.Angular (+TypeScript)
    -frontend framework

HTML:
No es un lenguaje de programacion, es un lenguaje de marcas utilizado para crear paginas webs, pero tendremos que ayudarnos de css para darle un buen formato.

Title of a section
    This is a paragraph with some text.
    Image
    ---------------
    ---------------
    ---------------
    List
        element 1 
        element 2
        element 3

Para poner comentarios en HTML se debe de utilizar esto <!--Texto que sera el comentario--> 
<!--Nuestros atributos a veces dicen alggo sonbre mnuestras etiquetas HTML, otras veces nos dan informacion que peude afectar el comportamiento de esa etiqueta-->

<!--Se considera un elemento, si tiene una etiqueta de apertura y otra de cierre-->
<html>content</html>

<!--Podemos darle el atributo de clase de la siguiente manera, pertenece a nuestra etiqueta p-->
<p class="paragraph">This is some text</p>
<a href="https://google.com" target="_blank">This is a link!</a> <!--Una etiqueta a (ancla) puede tomar algunos atributos especiales que otras etiquetas no pueden usar // target="_blank"
se utiiza para que la pagina que has puesto en el enlace te la abra en otra pestaña-->

Los archivos que queremos que utilice nuestra pagina web como scripts pueden estar en el mismo servidor de nuestra pagina HTML o puede ser un archivo externo.

Etiquetas Open Graph: 
Siempre van en el encabezado de su HTML junto con los otros metadatos se ponen de la siguiente manera:
<meta property="Name" content="value"/>

og:title
<title>My Website</title>
<meta property="og:title" content="My website"/>

og:type
<meta property="og:type" content="website" />

og:image
<meta property="og:image" content="/colby.jpg" />

og:url
<meta property="og:url" content="https://cool.com" />

og:description
<meta name="description" content="My blog" />
<meta property="og:description" content="My blog" />

og:locale
English - United States
<meta property="og:locale" content="en_US" />

og:site_name
My company
<meta property="og:site_name" content="My company" />

og:video
<meta property="og:video" content="/video.mov" />

twitter:card
<meta name="twitter:card" content="summary_large_image" />

DRY promuebe la reducción de la duplicación.

Creamos un campo para poner la tarjeta de credito, la parte de label nos dara solo el texto que saldra al lado de la caja que sera el input justo debajo de este, le podemos dar el atrubuto
de required que eso hace que sea obligatorio de llenarlo para poder enviar el formulario. El tipo es importante ya que si queremos poner solo numeros como en este caso para una tarjeta
debemos poner type="text" porque con numeros nos deja poner solo de uno en uno como si fuera una cuenta y nunca podriamos poner la tarjeta bien. En el placeholder le damos una guia de como
queremos que se ponga el texto. Si quisieramos hacer que solo ponga numeros tendriamos que utilizar un script para filtrar el tipo de texto que introducimos
<label for="form-cc">Credit card number <abbr title="required"></abbr> (Required)</label>
<input id="form-cc" name="cc" type="text" placeholder="1234 5678 9012 3456" maxlength="19" required/>

padding cuando son elementos le damos con pixeles // cuando son elementos muy grandes se puede utilizar por porcentage

-----------------------------------------------------------------------
Ejercicio para el checkpoint, hacer una pagina que se pueda hacer pequeña para el tamaño de 
movil
